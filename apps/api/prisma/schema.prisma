generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  email     String @unique @db.VarChar(255)
  firstName String @map("first_name") @db.VarChar(50)
  lastName  String @map("last_name") @db.VarChar(50)
  username  String @unique @db.VarChar(50)
  profileImage String? @map("profile_image") @db.VarChar(255)
  bio       String? @db.VarChar(255)

  passwordHash String @map("password_hash") @db.VarChar(255)
  createdAt    DateTime     @default(now()) @map("created_at")
  messages     Message[]
  memberships  Membership[]

  @@map("users")
}

model Room {
  id          String       @id @default(uuid()) @db.VarChar(36)
  name        String? @map("name") @db.VarChar(100)
  isDM        Boolean      @default(false) @map("is_dm")
  createdAt   DateTime     @default(now()) @map("created_at")
  messages    Message[]
  memberships Membership[]

  @@map("rooms")
}

model Membership {
  userId   String @map("user_id")
  roomId   String @map("room_id")
  joinedAt DateTime @default(now()) @map("joined_at")

  user User @relation(fields: [userId], references: [id])
  room Room @relation(fields: [roomId], references: [id])

  @@id([userId, roomId])
  @@map("memberships")
}

model Message {
  id        String   @id @default(uuid()) @db.VarChar(36)
  roomId    String @map("room_id")
  senderId  String  @map("sender_id")
  content   String  @db.Text  @map("content")
  createdAt DateTime @default(now()) @map("created_at")

  room   Room @relation(fields: [roomId], references: [id])
  sender User @relation(fields: [senderId], references: [id])

  @@index([roomId, createdAt])

  @@map("messages")
}
